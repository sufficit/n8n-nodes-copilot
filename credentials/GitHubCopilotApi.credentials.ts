import {
  ICredentialType,
  INodeProperties,
  ICredentialTestRequest,
  IAuthenticateGeneric,
} from "n8n-workflow";

import { GITHUB_COPILOT_API } from "../shared/utils/GitHubCopilotEndpoints";

/**
 * GitHub Copilot API Token Credentials
 * ONLY GitHub CLI generated tokens work with GitHub Copilot API
 * OAuth2 and Personal Access Tokens from GitHub website DO NOT work
 */

export class GitHubCopilotApi implements ICredentialType {
  name = "githubCopilotApi";

  displayName = "GitHub Copilot API (GitHub CLI Token)";

  documentationUrl =
    "https://docs.github.com/en/copilot/github-copilot-chat/copilot-chat-in-ides/using-github-copilot-chat-in-your-ide";

  properties: INodeProperties[] = [
    {
      displayName: "⚠️ IMPORTANT: GitHub CLI Token Required",
      name: "notice",
      type: "notice",
      default: "",
      description:
				"Only tokens generated by GitHub CLI work with Copilot API. OAuth2 and Personal Access Tokens from GitHub website DO NOT work.",
    },
    {
      displayName: "GitHub CLI Token",
      name: "token",
      type: "string",
      typeOptions: {
        password: true,
      },
      default: "",
      required: true,
      description:
				"⚠️ REQUIRED: Token generated by GitHub CLI that starts with \"gho_\". Get it by running: gh auth login && gh auth token. Other tokens will NOT work!",
      placeholder: "gho_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    },
  ];

  authenticate: IAuthenticateGeneric = {
    type: "generic",
    properties: {
      headers: {
        Authorization: "=Bearer {{$credentials.token}}",
        Accept: "application/json",
        "Content-Type": "application/json",
      },
    },
  };

  test: ICredentialTestRequest = {
    request: {
      baseURL: GITHUB_COPILOT_API.BASE_URL,
      url: GITHUB_COPILOT_API.ENDPOINTS.MODELS,
      method: "GET",
    },
  };
}
